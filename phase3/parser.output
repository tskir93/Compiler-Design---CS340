Terminals unused in grammar

   UNDERSCORE


State 20 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmts
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | break
   10     | continue
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTIPLY expr
   18     | expr DEVIDE expr
   19     | expr PERCENTAGE expr
   20     | expr GREATER_THAN expr
   21     | expr GR_EQ expr
   22     | expr LESS_THAN expr
   23     | expr LE_EQ expr
   24     | expr EQUAL expr
   25     | expr NOTEQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_PAR expr RIGHT_PAR
   30     | MINUS expr
   31     | NOT expr
   32     | DOUBLE_PLUS lvalue
   33     | lvalue DOUBLE_PLUS
   34     | DOUBLE_MINUS lvalue
   35     | lvalue DOUBLE_MINUS
   36     | primary

   37 assignexpr: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | tablemake
   41        | LEFT_PAR funcdef RIGHT_PAR
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DOUBLE_COL ID
   46       | tableitem

   47 tableitem: lvalue DOT ID
   48          | lvalue LEFT_SQ_BR expr RIGHT_SQ_BR
   49          | call DOT ID
   50          | call LEFT_SQ_BR expr RIGHT_SQ_BR

   51 call: call LEFT_PAR elist RIGHT_PAR
   52     | lvalue callsuffix
   53     | LEFT_PAR funcdef RIGHT_PAR LEFT_PAR elist RIGHT_PAR

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PAR elist RIGHT_PAR

   57 methodcall: DOUBLE_DOT ID LEFT_PAR elist RIGHT_PAR

   58 elist: expr
   59      | expr COMMA elist
   60      | %empty

   61 tablemake: LEFT_SQ_BR elist RIGHT_SQ_BR
   62          | LEFT_SQ_BR indexed RIGHT_SQ_BR

   63 indexed: indexedelem
   64        | indexedelem COMMA indexed

   65 indexedelem: LEFT_BR expr COLON expr RIGHT_BR

   66 block: LEFT_BR RIGHT_BR

   67 $@1: %empty

   68 $@2: %empty

   69 block: LEFT_BR $@1 stmts RIGHT_BR $@2

   70 funcname: ID
   71         | %empty

   72 funcblockstart: %empty

   73 funcblockend: %empty

   74 funcprefix: FUNCTION funcname

   75 $@3: %empty

   76 $@4: %empty

   77 funcargs: LEFT_PAR $@3 idlist $@4 RIGHT_PAR funcblockstart

   78 funcbody: block funcblockend

   79 funcdef: funcprefix funcargs funcbody

   80 const: CONST_INT
   81      | CONST_REAL
   82      | STRING
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 $@5: %empty

   87 idlist: ID $@5

   88 $@6: %empty

   89 idlist: ID COMMA idlists $@6
   90       | %empty

   91 $@7: %empty

   92 idlists: ID $@7

   93 $@8: %empty

   94 idlists: ID COMMA idlists $@8

   95 ifprefix: IF LEFT_PAR expr RIGHT_PAR

   96 elseprefix: ELSE

   97 ifstmt: ifprefix stmt
   98       | ifprefix stmt elseprefix stmt

   99 loopstart: %empty

  100 loopend: %empty

  101 loopstmt: loopstart stmt loopend

  102 break: BREAK SEMICOLON

  103 continue: CONTINUE SEMICOLON

  104 whilestart: WHILE

  105 whilecond: LEFT_PAR expr RIGHT_PAR

  106 $@9: %empty

  107 $@10: %empty

  108 whilestmt: whilestart whilecond $@9 loopstmt $@10

  109 N: %empty

  110 M: %empty

  111 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON

  112 forstmt: forprefix N elist RIGHT_PAR N loopstmt N

  113 returnstmt: RETURN SEMICOLON

  114 $@11: %empty

  115 $@12: %empty

  116 returnstmt: RETURN $@11 expr SEMICOLON $@12


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_INT (258) 80
IF (259) 95
ELSE (260) 96
WHILE (261) 104
FOR (262) 111
FUNCTION (263) 74
RETURN (264) 113 116
BREAK (265) 102
CONTINUE (266) 103
AND (267) 26
NOT (268) 31
OR (269) 27
LOCAL (270) 44
TRUE (271) 84
FALSE (272) 85
NIL (273) 83
ASSIGN (274) 37
PLUS (275) 15
MINUS (276) 16 30
MULTIPLY (277) 17
DEVIDE (278) 18
PERCENTAGE (279) 19
EQUAL (280) 24
NOTEQUAL (281) 25
DOUBLE_PLUS (282) 32 33
DOUBLE_MINUS (283) 34 35
GREATER_THAN (284) 20
LESS_THAN (285) 22
GR_EQ (286) 21
LE_EQ (287) 23
ID (288) 43 44 45 47 49 57 70 87 89 92 94
STRING (289) 82
DOT (290) 47 49
DOUBLE_DOT (291) 57
UNDERSCORE (292)
COLON (293) 65
DOUBLE_COL (294) 45
LEFT_BR (295) 65 66 69
RIGHT_BR (296) 65 66 69
LEFT_SQ_BR (297) 48 50 61 62
RIGHT_SQ_BR (298) 48 50 61 62
LEFT_PAR (299) 29 41 51 53 56 57 77 95 105 111
RIGHT_PAR (300) 29 41 51 53 56 57 77 95 105 112
SEMICOLON (301) 4 13 102 103 111 113 116
COMMA (302) 59 64 89 94
CONST_REAL (303) 81
UMINUS (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
stmts (52)
    on left: 2 3, on right: 1 2 69
stmt (53)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 97 98 101
expr (54)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 59
    65 95 105 111 116
term (55)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignexpr (56)
    on left: 37, on right: 14
primary (57)
    on left: 38 39 40 41 42, on right: 36
lvalue (58)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
tableitem (59)
    on left: 47 48 49 50, on right: 46
call (60)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (61)
    on left: 54 55, on right: 52
normcall (62)
    on left: 56, on right: 54
methodcall (63)
    on left: 57, on right: 55
elist (64)
    on left: 58 59 60, on right: 51 53 56 57 59 61 111 112
tablemake (65)
    on left: 61 62, on right: 40
indexed (66)
    on left: 63 64, on right: 62 64
indexedelem (67)
    on left: 65, on right: 63 64
block (68)
    on left: 66 69, on right: 11 78
$@1 (69)
    on left: 67, on right: 69
$@2 (70)
    on left: 68, on right: 69
funcname (71)
    on left: 70 71, on right: 74
funcblockstart (72)
    on left: 72, on right: 77
funcblockend (73)
    on left: 73, on right: 78
funcprefix (74)
    on left: 74, on right: 79
funcargs (75)
    on left: 77, on right: 79
$@3 (76)
    on left: 75, on right: 77
$@4 (77)
    on left: 76, on right: 77
funcbody (78)
    on left: 78, on right: 79
funcdef (79)
    on left: 79, on right: 12 41 53
const (80)
    on left: 80 81 82 83 84 85, on right: 42
idlist (81)
    on left: 87 89 90, on right: 77
$@5 (82)
    on left: 86, on right: 87
$@6 (83)
    on left: 88, on right: 89
idlists (84)
    on left: 92 94, on right: 89 94
$@7 (85)
    on left: 91, on right: 92
$@8 (86)
    on left: 93, on right: 94
ifprefix (87)
    on left: 95, on right: 97 98
elseprefix (88)
    on left: 96, on right: 98
ifstmt (89)
    on left: 97 98, on right: 5
loopstart (90)
    on left: 99, on right: 101
loopend (91)
    on left: 100, on right: 101
loopstmt (92)
    on left: 101, on right: 108 112
break (93)
    on left: 102, on right: 9
continue (94)
    on left: 103, on right: 10
whilestart (95)
    on left: 104, on right: 108
whilecond (96)
    on left: 105, on right: 108
whilestmt (97)
    on left: 108, on right: 6
$@9 (98)
    on left: 106, on right: 108
$@10 (99)
    on left: 107, on right: 108
N (100)
    on left: 109, on right: 112
M (101)
    on left: 110, on right: 111
forprefix (102)
    on left: 111, on right: 112
forstmt (103)
    on left: 112, on right: 7
returnstmt (104)
    on left: 113 116, on right: 8
$@11 (105)
    on left: 114, on right: 116
$@12 (106)
    on left: 115, on right: 116


State 0

    0 $accept: . program $end

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 1

   80 const: CONST_INT .

    $default  reduce using rule 80 (const)


State 2

   95 ifprefix: IF . LEFT_PAR expr RIGHT_PAR

    LEFT_PAR  shift, and go to state 49


State 3

  104 whilestart: WHILE .

    $default  reduce using rule 104 (whilestart)


State 4

  111 forprefix: FOR . LEFT_PAR elist SEMICOLON M expr SEMICOLON

    LEFT_PAR  shift, and go to state 50


State 5

   74 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 51

    $default  reduce using rule 71 (funcname)

    funcname  go to state 52


State 6

  113 returnstmt: RETURN . SEMICOLON
  116           | RETURN . $@11 expr SEMICOLON $@12

    SEMICOLON  shift, and go to state 53

    $default  reduce using rule 114 ($@11)

    $@11  go to state 54


State 7

  102 break: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 8

  103 continue: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 9

   31 term: NOT . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 57
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 10

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 58


State 11

   84 const: TRUE .

    $default  reduce using rule 84 (const)


State 12

   85 const: FALSE .

    $default  reduce using rule 85 (const)


State 13

   83 const: NIL .

    $default  reduce using rule 83 (const)


State 14

   30 term: MINUS . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 59
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 15

   32 term: DOUBLE_PLUS . lvalue

    LOCAL       shift, and go to state 10
    ID          shift, and go to state 17
    DOUBLE_COL  shift, and go to state 19
    LEFT_PAR    shift, and go to state 60

    lvalue     go to state 61
    tableitem  go to state 33
    call       go to state 62


State 16

   34 term: DOUBLE_MINUS . lvalue

    LOCAL       shift, and go to state 10
    ID          shift, and go to state 17
    DOUBLE_COL  shift, and go to state 19
    LEFT_PAR    shift, and go to state 60

    lvalue     go to state 63
    tableitem  go to state 33
    call       go to state 62


State 17

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 18

   82 const: STRING .

    $default  reduce using rule 82 (const)


State 19

   45 lvalue: DOUBLE_COL . ID

    ID  shift, and go to state 64


State 20

   66 block: LEFT_BR . RIGHT_BR
   69      | LEFT_BR . $@1 stmts RIGHT_BR $@2

    RIGHT_BR  shift, and go to state 65

    RIGHT_BR  [reduce using rule 67 ($@1)]
    $default  reduce using rule 67 ($@1)

    $@1  go to state 66


State 21

   61 tablemake: LEFT_SQ_BR . elist RIGHT_SQ_BR
   62          | LEFT_SQ_BR . indexed RIGHT_SQ_BR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 67
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr         go to state 68
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    tableitem    go to state 33
    call         go to state 34
    elist        go to state 69
    tablemake    go to state 35
    indexed      go to state 70
    indexedelem  go to state 71
    const        go to state 39


State 22

   29 term: LEFT_PAR . expr RIGHT_PAR
   41 primary: LEFT_PAR . funcdef RIGHT_PAR
   53 call: LEFT_PAR . funcdef RIGHT_PAR LEFT_PAR elist RIGHT_PAR

    CONST_INT     shift, and go to state 1
    FUNCTION      shift, and go to state 5
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 72
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    funcprefix  go to state 37
    funcdef     go to state 73
    const       go to state 39


State 23

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 24

   81 const: CONST_REAL .

    $default  reduce using rule 81 (const)


State 25

    0 $accept: program . $end

    $end  shift, and go to state 74


State 26

    1 program: stmts .

    $default  reduce using rule 1 (program)


State 27

    2 stmts: stmt . stmts

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 75
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 28

    4 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    SEMICOLON     shift, and go to state 89


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . DOUBLE_PLUS
   35     | lvalue . DOUBLE_MINUS
   37 assignexpr: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 tableitem: lvalue . DOT ID
   48          | lvalue . LEFT_SQ_BR expr RIGHT_SQ_BR
   52 call: lvalue . callsuffix

    ASSIGN        shift, and go to state 90
    DOUBLE_PLUS   shift, and go to state 91
    DOUBLE_MINUS  shift, and go to state 92
    DOT           shift, and go to state 93
    DOUBLE_DOT    shift, and go to state 94
    LEFT_SQ_BR    shift, and go to state 95
    LEFT_PAR      shift, and go to state 96

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 33

   46 lvalue: tableitem .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 tableitem: call . DOT ID
   50          | call . LEFT_SQ_BR expr RIGHT_SQ_BR
   51 call: call . LEFT_PAR elist RIGHT_PAR

    DOT         shift, and go to state 100
    LEFT_SQ_BR  shift, and go to state 101
    LEFT_PAR    shift, and go to state 102

    $default  reduce using rule 39 (primary)


State 35

   40 primary: tablemake .

    $default  reduce using rule 40 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   79 funcdef: funcprefix . funcargs funcbody

    LEFT_PAR  shift, and go to state 103

    funcargs  go to state 104


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 40

   97 ifstmt: ifprefix . stmt
   98       | ifprefix . stmt elseprefix stmt

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    stmt        go to state 105
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 41

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 42

    9 stmt: break .

    $default  reduce using rule 9 (stmt)


State 43

   10 stmt: continue .

    $default  reduce using rule 10 (stmt)


State 44

  108 whilestmt: whilestart . whilecond $@9 loopstmt $@10

    LEFT_PAR  shift, and go to state 106

    whilecond  go to state 107


State 45

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 46

  112 forstmt: forprefix . N elist RIGHT_PAR N loopstmt N

    $default  reduce using rule 109 (N)

    N  go to state 108


State 47

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 48

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 49

   95 ifprefix: IF LEFT_PAR . expr RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 109
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 50

  111 forprefix: FOR LEFT_PAR . elist SEMICOLON M expr SEMICOLON

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 110
    tablemake   go to state 35
    const       go to state 39


State 51

   70 funcname: ID .

    $default  reduce using rule 70 (funcname)


State 52

   74 funcprefix: FUNCTION funcname .

    $default  reduce using rule 74 (funcprefix)


State 53

  113 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 113 (returnstmt)


State 54

  116 returnstmt: RETURN $@11 . expr SEMICOLON $@12

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 111
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 55

  102 break: BREAK SEMICOLON .

    $default  reduce using rule 102 (break)


State 56

  103 continue: CONTINUE SEMICOLON .

    $default  reduce using rule 103 (continue)


State 57

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 58

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 59

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 60

   53 call: LEFT_PAR . funcdef RIGHT_PAR LEFT_PAR elist RIGHT_PAR

    FUNCTION  shift, and go to state 5

    funcprefix  go to state 37
    funcdef     go to state 112


State 61

   32 term: DOUBLE_PLUS lvalue .
   47 tableitem: lvalue . DOT ID
   48          | lvalue . LEFT_SQ_BR expr RIGHT_SQ_BR
   52 call: lvalue . callsuffix

    DOT         shift, and go to state 93
    DOUBLE_DOT  shift, and go to state 94
    LEFT_SQ_BR  shift, and go to state 95
    LEFT_PAR    shift, and go to state 96

    $default  reduce using rule 32 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 62

   49 tableitem: call . DOT ID
   50          | call . LEFT_SQ_BR expr RIGHT_SQ_BR
   51 call: call . LEFT_PAR elist RIGHT_PAR

    DOT         shift, and go to state 100
    LEFT_SQ_BR  shift, and go to state 101
    LEFT_PAR    shift, and go to state 102


State 63

   34 term: DOUBLE_MINUS lvalue .
   47 tableitem: lvalue . DOT ID
   48          | lvalue . LEFT_SQ_BR expr RIGHT_SQ_BR
   52 call: lvalue . callsuffix

    DOT         shift, and go to state 93
    DOUBLE_DOT  shift, and go to state 94
    LEFT_SQ_BR  shift, and go to state 95
    LEFT_PAR    shift, and go to state 96

    $default  reduce using rule 34 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 64

   45 lvalue: DOUBLE_COL ID .

    $default  reduce using rule 45 (lvalue)


State 65

   66 block: LEFT_BR RIGHT_BR .

    $default  reduce using rule 66 (block)


State 66

   69 block: LEFT_BR $@1 . stmts RIGHT_BR $@2

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 113
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 67

   65 indexedelem: LEFT_BR . expr COLON expr RIGHT_BR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 68

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   58 elist: expr .
   59      | expr . COMMA elist

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    COMMA         shift, and go to state 115

    $default  reduce using rule 58 (elist)


State 69

   61 tablemake: LEFT_SQ_BR elist . RIGHT_SQ_BR

    RIGHT_SQ_BR  shift, and go to state 116


State 70

   62 tablemake: LEFT_SQ_BR indexed . RIGHT_SQ_BR

    RIGHT_SQ_BR  shift, and go to state 117


State 71

   63 indexed: indexedelem .
   64        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 118

    $default  reduce using rule 63 (indexed)


State 72

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LEFT_PAR expr . RIGHT_PAR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_PAR     shift, and go to state 119


State 73

   41 primary: LEFT_PAR funcdef . RIGHT_PAR
   53 call: LEFT_PAR funcdef . RIGHT_PAR LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 120


State 74

    0 $accept: program $end .

    $default  accept


State 75

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


State 76

   26 expr: expr AND . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 77

   27 expr: expr OR . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 78

   15 expr: expr PLUS . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 79

   16 expr: expr MINUS . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 80

   17 expr: expr MULTIPLY . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 81

   18 expr: expr DEVIDE . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 82

   19 expr: expr PERCENTAGE . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 83

   24 expr: expr EQUAL . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 84

   25 expr: expr NOTEQUAL . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 85

   20 expr: expr GREATER_THAN . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 86

   22 expr: expr LESS_THAN . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 87

   21 expr: expr GR_EQ . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 88

   23 expr: expr LE_EQ . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 89

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 90

   37 assignexpr: lvalue ASSIGN . expr

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 91

   33 term: lvalue DOUBLE_PLUS .

    $default  reduce using rule 33 (term)


State 92

   35 term: lvalue DOUBLE_MINUS .

    $default  reduce using rule 35 (term)


State 93

   47 tableitem: lvalue DOT . ID

    ID  shift, and go to state 135


State 94

   57 methodcall: DOUBLE_DOT . ID LEFT_PAR elist RIGHT_PAR

    ID  shift, and go to state 136


State 95

   48 tableitem: lvalue LEFT_SQ_BR . expr RIGHT_SQ_BR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 137
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 96

   56 normcall: LEFT_PAR . elist RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 138
    tablemake   go to state 35
    const       go to state 39


State 97

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 98

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 99

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 100

   49 tableitem: call DOT . ID

    ID  shift, and go to state 139


State 101

   50 tableitem: call LEFT_SQ_BR . expr RIGHT_SQ_BR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 140
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 102

   51 call: call LEFT_PAR . elist RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 141
    tablemake   go to state 35
    const       go to state 39


State 103

   77 funcargs: LEFT_PAR . $@3 idlist $@4 RIGHT_PAR funcblockstart

    $default  reduce using rule 75 ($@3)

    $@3  go to state 142


State 104

   79 funcdef: funcprefix funcargs . funcbody

    LEFT_BR  shift, and go to state 20

    block     go to state 143
    funcbody  go to state 144


State 105

   97 ifstmt: ifprefix stmt .
   98       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 97 (ifstmt)]
    $default  reduce using rule 97 (ifstmt)

    elseprefix  go to state 146


State 106

  105 whilecond: LEFT_PAR . expr RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 147
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 107

  108 whilestmt: whilestart whilecond . $@9 loopstmt $@10

    $default  reduce using rule 106 ($@9)

    $@9  go to state 148


State 108

  112 forstmt: forprefix N . elist RIGHT_PAR N loopstmt N

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 149
    tablemake   go to state 35
    const       go to state 39


State 109

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   95 ifprefix: IF LEFT_PAR expr . RIGHT_PAR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_PAR     shift, and go to state 150


State 110

  111 forprefix: FOR LEFT_PAR elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 151


State 111

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  116 returnstmt: RETURN $@11 expr . SEMICOLON $@12

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    SEMICOLON     shift, and go to state 152


State 112

   53 call: LEFT_PAR funcdef . RIGHT_PAR LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 153


State 113

   69 block: LEFT_BR $@1 stmts . RIGHT_BR $@2

    RIGHT_BR  shift, and go to state 154


State 114

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LEFT_BR expr . COLON expr RIGHT_BR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    COLON         shift, and go to state 155


State 115

   59 elist: expr COMMA . elist

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 156
    tablemake   go to state 35
    const       go to state 39


State 116

   61 tablemake: LEFT_SQ_BR elist RIGHT_SQ_BR .

    $default  reduce using rule 61 (tablemake)


State 117

   62 tablemake: LEFT_SQ_BR indexed RIGHT_SQ_BR .

    $default  reduce using rule 62 (tablemake)


State 118

   64 indexed: indexedelem COMMA . indexed

    LEFT_BR  shift, and go to state 67

    indexed      go to state 157
    indexedelem  go to state 71


State 119

   29 term: LEFT_PAR expr RIGHT_PAR .

    $default  reduce using rule 29 (term)


State 120

   41 primary: LEFT_PAR funcdef RIGHT_PAR .
   53 call: LEFT_PAR funcdef RIGHT_PAR . LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 158

    $default  reduce using rule 41 (primary)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88

    $default  reduce using rule 26 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND           shift, and go to state 76
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88

    $default  reduce using rule 27 (expr)


State 123

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    $default  reduce using rule 15 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    $default  reduce using rule 16 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   17     | expr MULTIPLY expr .
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   18     | expr DEVIDE expr .
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   19     | expr PERCENTAGE expr .
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   25     | expr NOTEQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   20     | expr GREATER_THAN expr .
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 78
    MINUS       shift, and go to state 79
    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)
    GR_EQ         error (nonassociative)
    LE_EQ         error (nonassociative)

    $default  reduce using rule 20 (expr)


State 131

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   22     | expr LESS_THAN expr .
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 78
    MINUS       shift, and go to state 79
    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)
    GR_EQ         error (nonassociative)
    LE_EQ         error (nonassociative)

    $default  reduce using rule 22 (expr)


State 132

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   21     | expr GR_EQ expr .
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 78
    MINUS       shift, and go to state 79
    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)
    GR_EQ         error (nonassociative)
    LE_EQ         error (nonassociative)

    $default  reduce using rule 21 (expr)


State 133

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   23     | expr LE_EQ expr .
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 78
    MINUS       shift, and go to state 79
    MULTIPLY    shift, and go to state 80
    DEVIDE      shift, and go to state 81
    PERCENTAGE  shift, and go to state 82

    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)
    GR_EQ         error (nonassociative)
    LE_EQ         error (nonassociative)

    $default  reduce using rule 23 (expr)


State 134

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignexpr: lvalue ASSIGN expr .

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88

    $default  reduce using rule 37 (assignexpr)


State 135

   47 tableitem: lvalue DOT ID .

    $default  reduce using rule 47 (tableitem)


State 136

   57 methodcall: DOUBLE_DOT ID . LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 159


State 137

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 tableitem: lvalue LEFT_SQ_BR expr . RIGHT_SQ_BR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_SQ_BR   shift, and go to state 160


State 138

   56 normcall: LEFT_PAR elist . RIGHT_PAR

    RIGHT_PAR  shift, and go to state 161


State 139

   49 tableitem: call DOT ID .

    $default  reduce using rule 49 (tableitem)


State 140

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 tableitem: call LEFT_SQ_BR expr . RIGHT_SQ_BR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_SQ_BR   shift, and go to state 162


State 141

   51 call: call LEFT_PAR elist . RIGHT_PAR

    RIGHT_PAR  shift, and go to state 163


State 142

   77 funcargs: LEFT_PAR $@3 . idlist $@4 RIGHT_PAR funcblockstart

    ID  shift, and go to state 164

    $default  reduce using rule 90 (idlist)

    idlist  go to state 165


State 143

   78 funcbody: block . funcblockend

    $default  reduce using rule 73 (funcblockend)

    funcblockend  go to state 166


State 144

   79 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 79 (funcdef)


State 145

   96 elseprefix: ELSE .

    $default  reduce using rule 96 (elseprefix)


State 146

   98 ifstmt: ifprefix stmt elseprefix . stmt

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    stmt        go to state 167
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 147

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  105 whilecond: LEFT_PAR expr . RIGHT_PAR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_PAR     shift, and go to state 168


State 148

  108 whilestmt: whilestart whilecond $@9 . loopstmt $@10

    $default  reduce using rule 99 (loopstart)

    loopstart  go to state 169
    loopstmt   go to state 170


State 149

  112 forstmt: forprefix N elist . RIGHT_PAR N loopstmt N

    RIGHT_PAR  shift, and go to state 171


State 150

   95 ifprefix: IF LEFT_PAR expr RIGHT_PAR .

    $default  reduce using rule 95 (ifprefix)


State 151

  111 forprefix: FOR LEFT_PAR elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 110 (M)

    M  go to state 172


State 152

  116 returnstmt: RETURN $@11 expr SEMICOLON . $@12

    $default  reduce using rule 115 ($@12)

    $@12  go to state 173


State 153

   53 call: LEFT_PAR funcdef RIGHT_PAR . LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 158


State 154

   69 block: LEFT_BR $@1 stmts RIGHT_BR . $@2

    $default  reduce using rule 68 ($@2)

    $@2  go to state 174


State 155

   65 indexedelem: LEFT_BR expr COLON . expr RIGHT_BR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 175
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 156

   59 elist: expr COMMA elist .

    $default  reduce using rule 59 (elist)


State 157

   64 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 64 (indexed)


State 158

   53 call: LEFT_PAR funcdef RIGHT_PAR LEFT_PAR . elist RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 176
    tablemake   go to state 35
    const       go to state 39


State 159

   57 methodcall: DOUBLE_DOT ID LEFT_PAR . elist RIGHT_PAR

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    elist       go to state 177
    tablemake   go to state 35
    const       go to state 39


State 160

   48 tableitem: lvalue LEFT_SQ_BR expr RIGHT_SQ_BR .

    $default  reduce using rule 48 (tableitem)


State 161

   56 normcall: LEFT_PAR elist RIGHT_PAR .

    $default  reduce using rule 56 (normcall)


State 162

   50 tableitem: call LEFT_SQ_BR expr RIGHT_SQ_BR .

    $default  reduce using rule 50 (tableitem)


State 163

   51 call: call LEFT_PAR elist RIGHT_PAR .

    $default  reduce using rule 51 (call)


State 164

   87 idlist: ID . $@5
   89       | ID . COMMA idlists $@6

    COMMA  shift, and go to state 178

    $default  reduce using rule 86 ($@5)

    $@5  go to state 179


State 165

   77 funcargs: LEFT_PAR $@3 idlist . $@4 RIGHT_PAR funcblockstart

    $default  reduce using rule 76 ($@4)

    $@4  go to state 180


State 166

   78 funcbody: block funcblockend .

    $default  reduce using rule 78 (funcbody)


State 167

   98 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 98 (ifstmt)


State 168

  105 whilecond: LEFT_PAR expr RIGHT_PAR .

    $default  reduce using rule 105 (whilecond)


State 169

  101 loopstmt: loopstart . stmt loopend

    CONST_INT     shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    FUNCTION      shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_BR       shift, and go to state 20
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    CONST_REAL    shift, and go to state 24

    stmt        go to state 181
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    break       go to state 42
    continue    go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 170

  108 whilestmt: whilestart whilecond $@9 loopstmt . $@10

    $default  reduce using rule 107 ($@10)

    $@10  go to state 182


State 171

  112 forstmt: forprefix N elist RIGHT_PAR . N loopstmt N

    $default  reduce using rule 109 (N)

    N  go to state 183


State 172

  111 forprefix: FOR LEFT_PAR elist SEMICOLON M . expr SEMICOLON

    CONST_INT     shift, and go to state 1
    NOT           shift, and go to state 9
    LOCAL         shift, and go to state 10
    TRUE          shift, and go to state 11
    FALSE         shift, and go to state 12
    NIL           shift, and go to state 13
    MINUS         shift, and go to state 14
    DOUBLE_PLUS   shift, and go to state 15
    DOUBLE_MINUS  shift, and go to state 16
    ID            shift, and go to state 17
    STRING        shift, and go to state 18
    DOUBLE_COL    shift, and go to state 19
    LEFT_SQ_BR    shift, and go to state 21
    LEFT_PAR      shift, and go to state 22
    CONST_REAL    shift, and go to state 24

    expr        go to state 184
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 173

  116 returnstmt: RETURN $@11 expr SEMICOLON $@12 .

    $default  reduce using rule 116 (returnstmt)


State 174

   69 block: LEFT_BR $@1 stmts RIGHT_BR $@2 .

    $default  reduce using rule 69 (block)


State 175

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LEFT_BR expr COLON expr . RIGHT_BR

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    RIGHT_BR      shift, and go to state 185


State 176

   53 call: LEFT_PAR funcdef RIGHT_PAR LEFT_PAR elist . RIGHT_PAR

    RIGHT_PAR  shift, and go to state 186


State 177

   57 methodcall: DOUBLE_DOT ID LEFT_PAR elist . RIGHT_PAR

    RIGHT_PAR  shift, and go to state 187


State 178

   89 idlist: ID COMMA . idlists $@6

    ID  shift, and go to state 188

    idlists  go to state 189


State 179

   87 idlist: ID $@5 .

    $default  reduce using rule 87 (idlist)


State 180

   77 funcargs: LEFT_PAR $@3 idlist $@4 . RIGHT_PAR funcblockstart

    RIGHT_PAR  shift, and go to state 190


State 181

  101 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 100 (loopend)

    loopend  go to state 191


State 182

  108 whilestmt: whilestart whilecond $@9 loopstmt $@10 .

    $default  reduce using rule 108 (whilestmt)


State 183

  112 forstmt: forprefix N elist RIGHT_PAR N . loopstmt N

    $default  reduce using rule 99 (loopstart)

    loopstart  go to state 169
    loopstmt   go to state 192


State 184

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DEVIDE expr
   19     | expr . PERCENTAGE expr
   20     | expr . GREATER_THAN expr
   21     | expr . GR_EQ expr
   22     | expr . LESS_THAN expr
   23     | expr . LE_EQ expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  111 forprefix: FOR LEFT_PAR elist SEMICOLON M expr . SEMICOLON

    AND           shift, and go to state 76
    OR            shift, and go to state 77
    PLUS          shift, and go to state 78
    MINUS         shift, and go to state 79
    MULTIPLY      shift, and go to state 80
    DEVIDE        shift, and go to state 81
    PERCENTAGE    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOTEQUAL      shift, and go to state 84
    GREATER_THAN  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GR_EQ         shift, and go to state 87
    LE_EQ         shift, and go to state 88
    SEMICOLON     shift, and go to state 193


State 185

   65 indexedelem: LEFT_BR expr COLON expr RIGHT_BR .

    $default  reduce using rule 65 (indexedelem)


State 186

   53 call: LEFT_PAR funcdef RIGHT_PAR LEFT_PAR elist RIGHT_PAR .

    $default  reduce using rule 53 (call)


State 187

   57 methodcall: DOUBLE_DOT ID LEFT_PAR elist RIGHT_PAR .

    $default  reduce using rule 57 (methodcall)


State 188

   92 idlists: ID . $@7
   94        | ID . COMMA idlists $@8

    COMMA  shift, and go to state 194

    $default  reduce using rule 91 ($@7)

    $@7  go to state 195


State 189

   89 idlist: ID COMMA idlists . $@6

    $default  reduce using rule 88 ($@6)

    $@6  go to state 196


State 190

   77 funcargs: LEFT_PAR $@3 idlist $@4 RIGHT_PAR . funcblockstart

    $default  reduce using rule 72 (funcblockstart)

    funcblockstart  go to state 197


State 191

  101 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 101 (loopstmt)


State 192

  112 forstmt: forprefix N elist RIGHT_PAR N loopstmt . N

    $default  reduce using rule 109 (N)

    N  go to state 198


State 193

  111 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 111 (forprefix)


State 194

   94 idlists: ID COMMA . idlists $@8

    ID  shift, and go to state 188

    idlists  go to state 199


State 195

   92 idlists: ID $@7 .

    $default  reduce using rule 92 (idlists)


State 196

   89 idlist: ID COMMA idlists $@6 .

    $default  reduce using rule 89 (idlist)


State 197

   77 funcargs: LEFT_PAR $@3 idlist $@4 RIGHT_PAR funcblockstart .

    $default  reduce using rule 77 (funcargs)


State 198

  112 forstmt: forprefix N elist RIGHT_PAR N loopstmt N .

    $default  reduce using rule 112 (forstmt)


State 199

   94 idlists: ID COMMA idlists . $@8

    $default  reduce using rule 93 ($@8)

    $@8  go to state 200


State 200

   94 idlists: ID COMMA idlists $@8 .

    $default  reduce using rule 94 (idlists)
